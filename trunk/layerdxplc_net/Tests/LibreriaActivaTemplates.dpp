import "Microsoft", "platform=DotNET", "ns=DotNET", "assembly=mscorlib";
import "System", "platform=DotNET", "ns=DotNET", "assembly=mscorlib";
import "System.Data", "platform=DotNET", "ns=DotNET", "assembly=System.Data";

using DotNET::System;
using DotNET::System::IO;
using DotNET::System::Data::SqlClient;
using DotNET::System::Collections;
using DotNET::LayerD::CodeDOM;
using DotNET::LayerD::ZOECompiler;

namespace ActiveLibrary{

	public factory class DataConnection{
	public:
		type DataConnection(){
			return gettype(DotNET::System::Data::SqlClient::SqlConnection);
		}
		exp void DataConnection(exp string^ constr){
			return writecode(new DotNET::System::Data::SqlClient::SqlConnection($constr));
		}
		exp void Open(){
			XplNode^ temp=context;
			while(temp!=null){
				if(temp.get_ElementName()=="for"){
					AddError("No puede utilizar el metodo Open adentro de un ciclo for.",context);
				}
				temp=temp.get_Parent();
			}
			return writecode(ileft.Open());
		}
		exp void Close(){
			return writecode(ileft.Close());
		}
	private:
		static void AddError(string^ errorMsg, XplNode^ contextNode){
			Error^ newError = new Error(errorMsg,errorMsg);
			newError.set_ErrorType(ErrorType::SemanticError);
			newError.set_PersistentError(true);
			newError.set_ErrorLayerDSourceFileData(ZoeHelper::GetFirstLayerDFullSourceData(contextNode));
			compiler.get_ErrorCollection().AddError(newError);
		}
	}
}